services: 
  user-service:
    container_name: user-app 
    build: 
      context: ./user-service
    ports:
      - "5001:5000"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    networks: 
      - app-network
    restart: unless-stopped

  product-service:
    container_name: product-app
    build: ./product-service
    ports:
      - "5002:5000"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    env_file:
      - .env
    restart: unless-stopped

  frontend:
    container_name: react
    build: 
      context: ./react-flask-app
    ports: 
      - "3000:80"
    env_file: 
      - ./react-flask-app/.env
    depends_on:
      - user-service
      - product-service
    networks:
      - app-network

  db:
    container_name: db
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes: 
      - db_data:/var/lib/postgresql/data
      - ./db-init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks: 
      - app-network
      
  redis:
    container_name: redis
    image: "redis:alpine"
    ports: 
      - "6379:6379"
    networks:
      - app-network
  
volumes:
  db_data:

networks:
  app-network:
